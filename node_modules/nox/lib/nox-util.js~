exports.criticalSection = function(sectionname) {
    var blocked = false;
    var queue = [];
    var retobj = {
	enterFun: function() {
	        var timer = null, timercount = 0;
	        return function(callback) {
		    if( blocked ) {
			    timer = setInterval(function() { log('have been waiting for ' + ((timercount++) * 10) + ' seconds at ' + sectionname); }, 10000);
			    queue.push(function() {
				clearInterval(timer);
				callback();
				    });
			} else {
			        blocked = true;
			        callback();
			    }
		        }
	    },
	exitFun: function() {
	        return function(callback) {
		    if( queue.length > 0 ) {
			    var next = queue.shift();
			    process.nextTick(next);
			} else 
			        blocked = false;
		    callback();
		        }
	    },
	wrap: function(fun) {
	        return function() {
		    var origargs = arguments;
		    var origcb = origargs[origargs.length - 1];
		    
		    var callbackargs = null;

		    retobj.enterFun()(function() {
			    origargs[origargs.length-1] = function() {
				callbackargs = arguments;
				retobj.exitFun()(function() {
				        origcb.apply({}, callbackargs);
				    });
				    }
			    fun.apply({}, origargs);
			});
		}
	    }
    }
    return retobj;
}
